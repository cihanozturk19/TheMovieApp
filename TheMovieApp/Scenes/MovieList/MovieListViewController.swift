//
//  MovieListViewController.swift
//  TheMovieApp
//
//  Created by CİHAN ÖZTÜRK on 29.01.2021.
//  Copyright (c) 2021 CİHAN ÖZTÜRK. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MovieListDisplayLogic: class {
    func displayMovies(viewModel: MovieList.PopularMovies.ViewModel)
    func displayDetail()
}

final class MovieListViewController: UIViewController, MovieListDisplayLogic {
   
    @IBOutlet private(set) weak var searchBar: UISearchBar!
    @IBOutlet private(set) weak var collectionView: UICollectionView!
    
    var interactor: MovieListBusinessLogic?
    var router: (NSObjectProtocol & MovieListRoutingLogic & MovieListDataPassing)?
    var viewModel: MovieList.PopularMovies.ViewModel!
    let sectionInsets = UIEdgeInsets(top: 10.00, left: 10.00, bottom: 10.00, right: 10.00)
    private var duration = 0.2

    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = MovieListInteractor()
        let presenter = MovieListPresenter()
        let router = MovieListRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
       
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        customizeNavigationBar()
        initCollectonView()
        interactor?.getPopularMovies(page: "1")
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
    }
    
    func customizeNavigationBar() {
        self.navigationController?.navigationBar.tintColor = .white
    }
    
    func initCollectonView() {
        collectionView.register(cell: MovieListViewCell.self)
    }
    
    func reloadData() {
        interactor?.reloadData()
    }
    // MARK: Display
    
    func displayMovies(viewModel: MovieList.PopularMovies.ViewModel) {
        self.viewModel = viewModel
        DispatchQueue.main.async {
//            UIView.transition(with: self.collectionView, duration: self.duration, options: .transitionCrossDissolve, animations: { self.collectionView.reloadData()
//            })
            self.collectionView.reloadData()
        }
        
    }
    
    func displayDetail() {
        router?.routeToDetail()
    }
}
