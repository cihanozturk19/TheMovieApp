//
//  MovieListInteractor.swift
//  TheMovieApp
//
//  Created by CİHAN ÖZTÜRK on 29.01.2021.
//  Copyright (c) 2021 CİHAN ÖZTÜRK. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MovieListBusinessLogic {
    func getPopularMovies(page: String)
    func didSelectItem(indexPath: IndexPath)
}

protocol MovieListDataStore {
    var movieID: String? { get set }
}

final class MovieListInteractor: MovieListBusinessLogic, MovieListDataStore {
    var presenter: MovieListPresentationLogic?
    var response: MovieList.PopularMovies.Response?
    var movieID: String?

    func getPopularMovies(page: String) {
        
        let request = MovieList.PopularMovies.Request(requestURL: RequestURL.MovieList.popularMovies.url + page)
        ServiceAPI.shared.callService(request: request, response: MovieList.PopularMovies.Response.self) { (result) in
            
            switch result {
            case .success(let response):
                self.response = response
                self.presenter?.presentPopularMovies(response: response)
                print(response)
                print("totalPages:",response.total_pages ?? "nil")
            case .failure(let error):
                print("the error \(error)")
            }
        }
    }
    
    func didSelectItem(indexPath: IndexPath) {
        guard let results = response?.results else {
            return
        }
        let item = results[indexPath.row]
        
        if let movieID = item.id{
            self.movieID = String(movieID)
        }
        presenter?.presentDetail()
    }
}
